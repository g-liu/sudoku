{"name":"Sudoku","tagline":"A Sudoku solver, written in Java","body":"Sudoku solver\r\n=============\r\n\r\nA Sudoku solver, written in Java. My first major Java program.\r\n\r\n## Usage\r\n\r\nRun from command line:\r\n\r\n\tjava Sudoku\r\n\r\nThis opens a GUI with which you can input your partial Sudoku solution (see next section).\r\n\r\n### Input\r\n\r\nYou can input a number in two ways:\r\n\r\n* Using the mouse scroll wheel, to move between 1-9\r\n* Clicking a cell and inputting a number 1-9\r\n\r\n### Solving\r\n\r\nHit `Calculate!` to solve the puzzle. This implementation is a brute-force solving algorithm, so it checks every possiblity until it finds one. The progress bar at bottom indicates the current cell that the solver is trying.\r\n\r\n## Saving / loading puzzles\r\n\r\nThis program has basic load/save functionality. You can save your files into a `.sudoku` file, which is a text file that stores all the numbers in the Sudoku grid. A sample file might look like this:\r\n\r\n\t100007090030020008009600500005300900010080002600004000300000010040000007007000300\r\n\r\nNumbers are mapped to the grid starting with the top-left most cell, working towards the bottom-right most cell. Zeroes represent unknown/blank values, all other digits represent the value in the cell.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}